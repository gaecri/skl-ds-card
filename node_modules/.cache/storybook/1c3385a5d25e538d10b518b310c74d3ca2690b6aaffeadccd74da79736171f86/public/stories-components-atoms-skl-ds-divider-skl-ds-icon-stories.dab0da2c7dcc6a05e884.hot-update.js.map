{"version":3,"file":"stories-components-atoms-skl-ds-divider-skl-ds-icon-stories.dab0da2c7dcc6a05e884.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAGA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sources":["webpack://my-app/./src/stories/components/atoms/skl-ds-divider/skl-ds-icon.stories.js","webpack://my-app/./src/stories/components/atoms/skl-ds-divider/skl-ds-divider.jsx"],"sourcesContent":["import { Icon } from './skl-ds-divider';\n\nimport { iconList } from '../../../../utilities/icons';\n\nexport default {\n  title: 'Example/Atoms/skl-ds-icon',\n  component: Icon,\n  argTypes: {\n    iconName: {\n      control: {\n        type: 'select', \n        options: ['alarm', 'chat', 'check', 'child_care', 'close', 'favorite', 'handyman']\n      },\n      description: 'Nome dell\\'icona (senza prefisso \"icon-\")',\n    },\n    color: {\n      control: 'color',\n      description: 'Colore dell\\'icona',\n    },\n    size: {\n      control: { \n        type: 'radio',\n        options: ['small', 'medium', 'large', 'xlarge'], \n      },\n      description: 'Dimensione dell\\'icona',\n    },\n  },\n};\n\n\nexport const Small = {\n  args: {\n    iconName: 'alarm', \n    color: '#000', \n    size: 'small'\n  }\n}\n\n\nexport const Medium = {\n  args: {\n    iconName: 'alarm', \n    color: '#000', \n    size: 'medium'\n  }\n}\n\nexport const Large = {\n  args: {\n    iconName: 'alarm', \n    color: '#000', \n    size: 'large'\n  }\n}\n\nexport const XLarge = {\n  args: {\n    iconName: 'alarm', \n    color: '#000', \n    size: 'xlarge'\n  }\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { iconList } from '../../../../utilities/icons'\n//import icomoonSelection from './../../../../font/icons/selection.json'\nimport './skl-ds-icon.css';\nimport './../../../../font/icons/style.css';\n\n//const iconList = icomoonSelection.icons.map((icon) => icon.properties.name);\n\n\nconsole.log(\"iconLisssst\", iconList)\n\n\n\nexport const Icon = ({ iconName, color, size}) => {\n  return (\n    <i \n      className={`icon-${iconName} icon-${size}`}\n      style={{ color }} \n      aria-hidden=\"true\"\n    ></i>\n  );\n};\n\nIcon.propTypes = {\n  iconName: PropTypes.oneOf(iconList).isRequired, // Nome dell'icona (senza \"icon-\")\n  color: PropTypes.string, // Colore dell'icona\n  size: PropTypes.oneOf(['small','medium', 'large', 'xlarge'])\n};\n\nIcon.defaultProps = {\n  iconName: 'alarm',\n  color: '#000', \n  size: 'large'\n};\n"],"names":[],"sourceRoot":""}