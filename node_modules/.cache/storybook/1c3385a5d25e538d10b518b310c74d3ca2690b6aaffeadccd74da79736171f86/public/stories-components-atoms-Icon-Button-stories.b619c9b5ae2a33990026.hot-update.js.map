{"version":3,"file":"stories-components-atoms-Icon-Button-stories.b619c9b5ae2a33990026.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AAEA;AAEA;;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://my-app/./src/stories/components/atoms/Icon/Button.stories.js","webpack://my-app/./src/stories/components/atoms/Icon/Icon.jsx"],"sourcesContent":["import { fn } from '@storybook/test';\n\nimport { Button } from './Icon';\n\n\n// More on how to set up stories at: https://storybook.js.org/docs/writing-stories#default-export\nexport default {\n  title: 'Example/Atoms/Button',\n  component: Button,\n  parameters: {\n    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/configure/story-layout\n    layout: 'centered',\n  },\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  // More on argTypes: https://storybook.js.org/docs/api/argtypes\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\n  args: { onClick: fn() },\n};\n\n// More on writing stories with args: https://storybook.js.org/docs/writing-stories/args\nexport const Primary = {\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n};\n\nexport const Secondary = {\n  args: {\n    label: 'Button',\n  },\n};\n\nexport const Large = {\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n};\n\nexport const Small = {\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport './button.css';\n\n\n/** Primary UI component for user interaction */\nexport const Button = ({ primary, backgroundColor, size, label, ...props }) => {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return (\n    <button\n      type=\"button\"\n      className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n      style={backgroundColor && { backgroundColor }}\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  /** Is this the principal call to action on the page? */\n  primary: PropTypes.bool,\n  /** What background color to use */\n  backgroundColor: PropTypes.string,\n  /** How large should the button be? */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /** Button contents */\n  label: PropTypes.string.isRequired,\n  /** Optional click handler */\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: 'medium',\n  onClick: undefined,\n};\n"],"names":[],"sourceRoot":""}