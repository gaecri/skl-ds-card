"use strict";
globalThis["webpackHotUpdatemy_app"]("stories-components-atoms-skl-ds-icon-skl-ds-icon-stories",{

/***/ "./src/stories/components/atoms/skl-ds-icon/skl-ds-icon.stories.js":
/*!*************************************************************************!*\
  !*** ./src/stories/components/atoms/skl-ds-icon/skl-ds-icon.stories.js ***!
  \*************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Large: () => (/* binding */ Large),
/* harmony export */   Medium: () => (/* binding */ Medium),
/* harmony export */   Small: () => (/* binding */ Small),
/* harmony export */   XLarge: () => (/* binding */ XLarge),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _skl_ds_icon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./skl-ds-icon */ "./src/stories/components/atoms/skl-ds-icon/skl-ds-icon.jsx");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");



//import { iconList } from '../../../../utilities/icons';

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Example/Atoms/skl-ds-icon',
  component: _skl_ds_icon__WEBPACK_IMPORTED_MODULE_0__.Icon,
  argTypes: {
    iconName: {
      control: {
        type: 'select',
        options: ['alarm', 'chat', 'check', 'child_care', 'close', 'favorite', 'handyman']
      },
      description: 'Nome dell\'icona (senza prefisso "icon-")'
    },
    color: {
      control: 'color',
      description: 'Colore dell\'icona'
    },
    iconSize: {
      control: {
        type: 'radio',
        options: ['small', 'medium', 'large', 'xlarge']
      },
      description: 'Dimensione dell\'icona'
    }
  }
});
const Small = {
  args: {
    iconName: 'alarm',
    color: '#000',
    iconSize: 'small'
  }
};
const Medium = {
  args: {
    iconName: 'alarm',
    color: '#000',
    iconSize: 'medium'
  }
};
const Large = {
  args: {
    iconName: 'alarm',
    color: '#000',
    iconSize: 'large'
  }
};
const XLarge = {
  args: {
    iconName: 'alarm',
    color: '#000',
    iconSize: 'xlarge'
  }
};
;
const __namedExportsOrder = ["Small", "Medium", "Large", "XLarge"];
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    iconName: 'alarm',\n    color: '#000',\n    iconSize: 'small'\n  }\n}",
      ...Small.parameters?.docs?.source
    }
  }
};
Medium.parameters = {
  ...Medium.parameters,
  docs: {
    ...Medium.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    iconName: 'alarm',\n    color: '#000',\n    iconSize: 'medium'\n  }\n}",
      ...Medium.parameters?.docs?.source
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...Large.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    iconName: 'alarm',\n    color: '#000',\n    iconSize: 'large'\n  }\n}",
      ...Large.parameters?.docs?.source
    }
  }
};
XLarge.parameters = {
  ...XLarge.parameters,
  docs: {
    ...XLarge.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    iconName: 'alarm',\n    color: '#000',\n    iconSize: 'xlarge'\n  }\n}",
      ...XLarge.parameters?.docs?.source
    }
  }
};

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=stories-components-atoms-skl-ds-icon-skl-ds-icon-stories.07731e9f9a4229d5dcd7.hot-update.js.map