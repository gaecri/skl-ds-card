{"version":3,"file":"stories-components-template-skl-ds-card-skl-ds-card-stories.3cd82f46a342b433d0ad.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AA7HA;AA+HA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://my-app/./src/stories/components/template/skl-ds-card/skl-ds-card.jsx"],"sourcesContent":["import React, { useState}  from 'react';\n\nimport PropTypes from 'prop-types';\nimport './skl-ds-card.scss';\n\nimport { Icon } from './../../atoms/skl-ds-icon/skl-ds-icon';\nimport { Text } from './../../atoms/skl-ds-text/skl-ds-text';\nimport { Cover } from './../../atoms/skl-ds-cover/skl-ds-cover';\nimport { Divider } from './../../atoms/skl-ds-divider/skl-ds-divider';\nimport { Widget } from './../../molecules/skl-ds-widget/skl-ds-widget';\n\nimport cover from './../../../assets/cover.png'\n\nexport const Card = ({ state, textHeader, cardTitle, footerText}) => {\n  const [cardState, setCardState] = useState(state);\n  const getTextByState = (state) => {\n    switch (state) {\n      case 'normal':\n        return '20h 2g';\n      case 'important':\n        return '2g';\n      case 'expired':\n        return 'EXPIRED';\n      case 'done':\n        return 'YEAH';\n      default:\n        return 'N/D';\n    }\n  };\n\n  const widgetData = [\n    { icon: 'handyman', iconSize: 'small', colorText: 'black', text: '3' },\n    { icon: 'child_care', iconSize: 'small', colorText: 'black', text: '80%'},\n    { icon: 'alarm', iconSize: 'small', colorText: cardState === 'important' ? 'white' : 'black', text: getTextByState(state), state: cardState},\n  ];\n\n  const [widgetStates, setWidgetStates] = useState(widgetData);\n\n  useEffect(() => {\n    const TimeCalculation = () => {\n      // Valori di tempo\n      const hours = 20; // 20 ore\n      const days = 2; // 2 giorni\n\n      // Converti in millisecondi\n      const totalMilliseconds1 = days * 24 * 60 * 60 * 1000 + hours * 60 * 60 * 1000; // 2 giorni + 20 ore\n      const totalMilliseconds2 = 2 * 24 * 60 * 60 * 1000; // 2 giorni\n\n      // Sottrazione\n      const differenceMilliseconds = totalMilliseconds1 - totalMilliseconds2;\n\n      // Converti la differenza in ore\n      return differenceMilliseconds / (60 * 60 * 1000); // da ms a ore\n    };\n\n    setDifferenceInHours(TimeCalculation());\n  }, []);\n\n  return <div className={`skl-ds-card skl-ds-card--${cardState}`}>\n    <strong>{differenceInHours} ore</strong>\n      <div className='skl-ds-card-header'>        \n          <Text \n            tag={'p'} \n            children={textHeader} \n            fontSize={'small'} \n            color={cardState === 'important' ? 'white' : 'black'}\n          />\n      </div>\n\n      <div className='skl-ds-card-cover'>\n        <Cover\n          src={cover}\n        />\n        {cardState === 'expired' || cardState === 'done' ?\n          <div className='skl-ds-card-cover__overlay'> \n            <Icon \n              className='skl-ds-card-cover__overlayIcon'\n              iconName={cardState === 'expired' ? 'close' : 'check'}\n              color={cardState === 'expired' ? 'black' : 'white'}\n              iconSize= {'xlarge'}\n            />\n          </div> : ''\n        }\n      </div>\n\n      <div className='skl-ds-card-body'>\n        <Text \n          className=\"skl-ds-card-body__title\"\n          tag={'h1'} \n          children={cardTitle} \n          fontSize={'medium'} \n          color={'black'}\n          bold\n        />\n\n        <Divider />\n\n        <div className='skl-ds-card-body__infos'>\n          {widgetStates.map((data, index) => (\n            <Widget \n              key={index}\n              icon={data.icon}\n              iconSize={data.iconSize}\n              colorText={data.colorText}\n              text={data.text}\n            />\n          ))}\n        </div>\n\n         <Divider />\n\n         <div className='skl-ds-card-footer'>\n          <Text \n            tag={'p'} \n            children={footerText} \n            fontSize={'small'} \n            color={'black'}\n          />\n          <div className=\"skl-ds-card-footer__label\">\n          <Widget \n              orientation={'horizontal'}\n              icon={'favorite'}\n              iconSize={'small'}\n              colorText={'black'}\n              text={'00'}\n            />\n\n            <Widget \n              orientation={'horizontal'}\n              icon={'chat'}\n              iconSize={'small'}\n              colorText={'black'}\n              text={'00'}\n            />  \n          </div>\n         </div>\n      </div>      \n  </div>\n};\n\nCard.propTypes = {\n  state: PropTypes.oneOf(['normal', 'important', 'expired', 'done']),\n  textHeader: PropTypes.string,\n  cardTitle: PropTypes.string,\n  footerText: PropTypes.string\n};\n\nCard.defaultProps = {\n  state: 'start',\n  textHeader: 'Emanuele',\n  cardTitle: 'This is a card title and can be at his maximum lenght about three lines. If the content exceed you need to cut it.',\n  footerText: 'Lego'\n};\n"],"names":[],"sourceRoot":""}